<div class="bg-map"></div>

<%= render :partial => 'orders/header' %>

<%= form_for @order do |f| %>
  <ul class="templates"></ul>

  <div class="map">
    <div class="browser">
      <div id="zoom"></div>
      <div id="map"></div>
    </div>
    <div class="shadow bottom"></div>
  </div>

  <div id="container"></div>

  <section class="hidden">
  <div class="inner">
    <ul id="templates-detail">
      <li class="template selected">
      <p><%= t('.templates-detail.select_one_type') %></p>
      </li>

      <% @templates_list.each do |template| -%>
        <li class="template <%= template.name %>">
        <%= f.hidden_field :template_type, :value => template.id, :disabled => true %>
        <h4><%= t(".templates-detail.#{template.name}.title") %></h4>
        <p><%= t(".templates-detail.#{template.name}.description") %></p>

        <% if template.price.present? -%>
          <span class="price"><%= t(".templates-detail.#{template.name}.price", :price => template.price) %></span>
        <% end -%>

        <% if template.visualization_methods.present? -%>
          <h4><%= t('.templates-detail.visualization_method') %></h4>
          <ul class="visualization_method">
            <% template.visualization_methods.each do |visualization_method| -%>
              <li>
              <%= f.radio_button :visualization_method, :value => visualization_method.id %>
              <%= f.label :visualization_method, t(".templates-detail.visualization_methods.#{visualization_method.name}.name") %>
              <p>
              <%= t(".templates-detail.visualization_methods.#{visualization_method.name}.description") %>
              </p>
              </li>
            <% end -%>
          </ul>
        <% end -%>

        <ul class="options">
          <% template.options.each do |option| -%>
            <li>
            <%= f.fields_for :order_options, @order.order_options.build do |ff| %>

              <%= checkbox ff, :template_option_id, option.name, option.id %>


              <span class="label_price">(<%= t(".templates-detail.template_options.#{option.name}.price", :price => option.price) %>)</span>

              <p><%= t(".templates-detail.template_options.#{option.name}.description") %></p>
              <div class="ellipsis">...</div>
              <div class="option_price"><%= t(".templates-detail.template_options.#{option.name}.price", :price => option.price) %></div>
            <% end -%>
            </li>
          <% end -%>
        </ul>

        <% if template.price.present? -%>
          <div class="total">
            <%= f.hidden_field :total, :disabled => true %>
            <h3><%= t('.total.title') %></h3>
            <div class="ammount"><%= t('.total.ammount_html', :price => template.price) %></div>
          </div>
        <% end -%>
        </li>
      <% end -%>
    </ul>
  </div>
  </section>

  <section class="highlighted">
  <div class="inner">
    <div class="left">
      <h3 class="bottom-5"><%= t('.your_data.title') %></h3>
      <p class="bottom-20"><%= t('.your_data.description') %></p>

      <div class="input-field upload">
        <input type="text" />
        <div class="placeholder">
          <div class="icon"></div>
          <span><%= t('.your_data.drag_drop') %></span>
          <%= link_to t('.your_data.select_files'), '#' %>
        </div>
      </div>
    </div>
  </div>
  </section>

  <section class="comments">
  <div class="left">

    <div class="inner">
      <div class="field left">
        <label for="name"><%= t('.contact_info.name') %></label>
        <div class="input-field">
          <input type="text" value="" name="name" />
        </div>
      </div>


      <div class="field right">
        <label for="email"><%= t('.contact_info.email') %></label>
        <div class="input-field">
          <input type="text" value="" name="email" />
        </div>
      </div>

      <div class="field">
        <label for="comments"><%= t('.contact_info.comments') %></label>
        <div class="textarea">
          <textarea value="" name="comments"></textarea>
        </div>
      </div>
    </div>
  </div>

  </section>

  <section class="submit centered">
  <div class="inner">
    <%= f.submit t('.submit'), :class => "button blue" %>
  </div>
  </section>

<% end %>

<%= render :partial => 'home/footer' %>


<% content_for :js do %>

  <script type="text/javascript">
    $(function() {

      cdb.init();

      var map = new cdb.geo.Map({
        center: [18.289374355860424, 59.765625]
      });

      map.setCenter([18.289374355860424, 59.765625]);

      var mapView = new cdb.geo.LeafletMapView({
        el: $('#map'),
        map: map
      });

      var zoom = new cdb.geo.ui.Zoom({
        model: map,
        template: cdb.templates.getTemplate('templates/map/zoom'),
        el: $('#zoom')
      })

      zoom.render();

      map.setZoom(2);

      var URL = 'http://{s}.tile.cloudmade.com/BC9A493B41014CAABB98F0471D759707/997/256/{z}/{x}/{y}.png';
      var layer = new cdb.geo.TileLayer({ urlTemplate: URL });
      map.addLayer(layer);

      var options = {
        user_name: 'examples',
        table_name: 'earthquakes',
        query: 'SELECT * FROM {{table_name}}',
        tile_style: "#{{table_name}}{marker-fill:red}",
        interactivity: "cartodb_id, magnitude",
        featureOut:   function() { console.log('out'); },
        featureOver:  function() { console.log('over'); },
        featureClick: function() { console.log('click'); }
      };

      var layer = new cdb.geo.CartoDBLayer(options);
      map.addLayer(layer);

      var fields = new cdb.ui.common.Fields([
        { callback: null, className: null,        checked: false, title: "Visualization method",  name: false, type: "title",    price: 0,    description: false },
        { callback: null, className: null,        checked: false, title: "Density map",           name: "z",   type: false,      price: 2000, description: "Includes data process & visualization." },
        { callback: null, className: null,        checked: true,  title: "Rectangular grid",      name: "a",   type: 'radio',    price: 0,    description: "Group and represent data using an hexagonal grid" },
        { callback: null, className: null,        checked: false, title: "Hexagonal grid",        name: "a",   type: 'radio',    price: 0,    description: "Group and represent data using a rectangular grid" },
        { callback: null, className: null,        checked: false, title: "Circular grid",         name: "a",   type: 'radio',    price: 0,    description: "this is a description" },
        { callback: null, className: "separator", checked: false, title: "Variable selection",    name: "b",   type: 'checkbox', price: 100,  description: "This allows your users to toggle between different variables to visualize." },
        { callback: function() {


        }, className: null,        checked: false, title: "Color selection",       name: "c",   type: 'checkbox', price: 200,  description: "This allows your users to toggle between different variables to visualize." }
      ]);

      var templates = new cdb.ui.common.Templates([
        { className: "markers",    name: "Markers map" },
        { className: "polygons",   name: "Polygons map" },
        { className: "choropleth", name: "Choropleth map" },
        { className: "bubble",     name: "Bubble map" },
        { className: "unknown",    name: "Don't know" }
      ]);

      window.templateView = new cdb.ui.common.Navigation({ collection: templates });

      window.formModel     = new cdb.ui.common.FormModel({ base: 0, total: 0 });
      window.app           = new cdb.ui.common.Form({ map: map, model: window.formModel, collection: fields });

      window.router    = new cdb.Router();
      Backbone.history.start({pushState: true});

      $("#container").append(window.app.render());

    });
  </script>

<% end %>
